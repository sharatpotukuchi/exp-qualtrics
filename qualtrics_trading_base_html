<style>
  :root{
    --ink:#111827; --muted:#6b7280; --line:#e5e7eb; --bg:#fff; --chip:#f3f4f6;
  }
  .term-wrap{font-family:Inter,system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;max-width:920px;margin:0 auto;padding:14px}

  /* Header */
  .topbar{display:flex;justify-content:space-between;align-items:center;margin-bottom:6px}
  .ticker{font-weight:700;font-size:18px; position:absolute; left:-9999px;} /* keep in DOM for JS, hide visually */
  .chip{padding:2px 8px;border-radius:12px;background:var(--chip);font-size:12px}
  .bal{font-weight:700;font-size:16px}

  /* Header stats row */
  .header-stats{
    display:flex;gap:20px;flex-wrap:wrap;justify-content:flex-end;
    color:var(--muted);font-size:13px;margin-bottom:8px
  }
  .header-stats .kv b{color:var(--ink)}

  /* Panels */
  .panel{border:1px solid var(--line);border-radius:12px;padding:16px;margin:12px 0;background:var(--bg)}
  .note{font-size:12px;color:var(--muted)}

  /* Scenario banner */
  .scenario{display:grid;grid-template-columns:1fr;gap:8px}
  .scenario h3{margin:0;font-size:16px;font-weight:700}
  .scenario p{margin:0;font-size:14px;color:#374151}

  /* Market */
  .chartbox{
    position:relative;border:1px solid var(--line);border-radius:12px;padding:12px;background:#fff;
  }
  .chart-head{
    display:flex;align-items:center;justify-content:space-between;margin-bottom:8px
  }
  .chart-ticker{
    background:#fff;border:1px solid var(--line);
    border-radius:999px;padding:6px 10px;font-weight:700;font-size:12px
  }
  .last-pill{background:#111827;color:#fff;border-radius:999px;padding:6px 10px;font-size:12px;font-variant:tabular-nums}
  .plotwrap{
    position:relative;border:1px solid var(--line);border-radius:12px;padding:8px;
    /* subtle grid in PLOT AREA only */
    background-image:
      repeating-linear-gradient(to right,#f3f4f6 0,#f3f4f6 1px,transparent 1px,transparent 80px),
      repeating-linear-gradient(to bottom,#f3f4f6 0,#f3f4f6 1px,transparent 1px,transparent 40px);
  }
  #px{display:block;width:100%;height:180px;border-radius:8px}
  /* overlay sits inside plot area, leaving bottom room for x-axis labels */
  .plotwrap #pxOverlay{position:absolute;left:8px;right:8px;top:8px;bottom:28px;pointer-events:none}
  .chart-meta{display:flex;justify-content:space-between;font-size:12px;color:var(--muted);margin-top:8px}

  /* Sentiment */
  .sent-wrap{display:flex;align-items:center;gap:10px}
  .sentbar{height:12px;background:#e5e7eb;border-radius:999px;flex:1;overflow:hidden}
  .sentfill{height:100%;background:#111827}

  /* News */
  .news{display:flex;gap:12px}
  .news img{width:64px;height:64px;border-radius:10px;object-fit:cover;border:1px solid var(--line)}

  /* Reference prices */
  .refs{display:grid;grid-template-columns:1fr 1fr;gap:12px}
  @media (max-width:760px){.refs{grid-template-columns:1fr}}
  .subhead{font-size:13px;color:#374151;margin-bottom:6px}
  .readonly{background:#f9fafb;border:1px dashed var(--line);border-radius:10px;padding:10px 12px;font-size:14px;display:flex;justify-content:space-between;align-items:center;gap:8px}
  .pill{display:inline-flex;align-items:center;gap:6px;background:#fff;border:1px solid var(--line);padding:6px 10px;border-radius:999px;font-variant:tabular-nums}

  /* Order */
  .ordergrid{display:grid;grid-template-columns:1fr;gap:16px}
  .rowline-3{display:grid;grid-template-columns:1fr 1fr 1fr;gap:12px}
  @media (max-width:760px){.rowline-3{grid-template-columns:1fr}}
  .ordergrid label{font-size:12px;color:#374151}
  .ordergrid input,.ordergrid select{width:100%;padding:10px 12px;border:1px solid #d1d5db;border-radius:10px;font-size:14px;background:#fff}

  .risk-box{display:flex;gap:24px;flex-wrap:wrap;padding:12px;border:1px solid var(--line);border-radius:10px;background:#fcfcfc;font-size:13px}
  .risk-box label{display:inline-flex;align-items:center;gap:8px}
  .risk-box input[type="checkbox"]{
    appearance:auto !important;-webkit-appearance:checkbox !important;
    width:16px;height:16px;margin:0;visibility:visible !important;opacity:1 !important;accent-color:#111827;
    position:static !important;display:inline-block !important;
  }

  .btn{appearance:none;border:0;border-radius:12px;padding:12px 18px;font-weight:700;cursor:pointer}
  .btn-primary{background:#111827;color:#fff}
  .btn-ghost{background:#f3f4f6;color:#111827}
  .footerline{display:flex;justify-content:space-between;align-items:center;margin-top:14px}
  .hint{display:none;margin-top:8px;padding:10px;border:1px dashed #d1d5db;border-radius:8px;background:#fafafa}

  /* Bottom account summary */
  .acct-summary{display:flex;gap:20px;flex-wrap:wrap;align-items:center;justify-content:flex-end;border-top:1px dashed var(--line);padding-top:12px;margin-top:6px;color:var(--muted);font-size:13px}
  .acct-summary b{color:var(--ink);font-variant:tabular-nums}
</style>

<div class="term-wrap">
  
  <div class="topbar">
    <div class="ticker">
      <span id="sym">ALFA</span> <span class="chip" id="sessionTag">Regular</span>
    </div>
    <div class="bal">Balance: $<span id="balanceTxt">100,000</span></div>
  </div>

  
  <div class="header-stats">
    <div class="kv">Position: <b><span id="posQty">0</span> @ <span id="posPx">—</span></b></div>
    <div class="kv">Unrealized P/L: <b id="unrl">—</b></div>
    <div class="kv">Time left: <b id="timer">—</b></div>
  </div>

  
  <div class="panel scenario" aria-label="Scenario intro">
    <h3>Scenario 1</h3>
    <p>It’s <b>9:28 a.m.</b> (pre-open). You’re starting the day with <b>$100,000</b> and no open positions. Your focus name is <b>ALFA</b>, a large-cap “AI hardware &amp; edge compute” stock. Overnight, a top broker released a bullish note.</p>
  </div>

  
  <div class="panel" aria-label="Market">
    <div class="chartbox">
      <div class="chart-head">
        <div class="chart-ticker"><span id="symChart">ALFA</span></div>
        <div class="last-pill">Last: $<span id="lastPillTxt">--</span></div>
      </div>
      <div class="plotwrap">
        <canvas id="px" width="740" height="180"></canvas>
        <canvas id="pxOverlay"></canvas>
      </div>
    </div>
    <div class="chart-meta">
      <span>Time</span>
      <span class="note">Last: <b id="last">--</b> • Bid/Ask: <b id="bid">--</b>/<b id="ask">--</b></span>
    </div>
  </div>

  
  <div class="panel" aria-label="Market sentiment">
    <div class="sent-wrap">
      <div style="min-width:120px;font-weight:700">Investors buying</div>
      <div class="sentbar"><div id="sentfill" class="sentfill" style="width:0%"></div></div>
      <div style="min-width:50px;text-align:right"><span id="sentPct">76</span>%</div>
    </div>
    <div class="note" style="margin-top:6px">Live sentiment from recent orders.</div>
  </div>

  
  <div class="panel" aria-label="Market news">
    <div class="news">
      <img id="newsImg" alt="">
      <div>
        <div id="newsHead" style="font-weight:700;font-size:16px;">TopBroker raises ALFA target to $75; cites outsized AI demand</div>
        <div id="newsBody" class="note" style="margin-top:4px;">Pre-open indications show strong interest. Options imply a ±10% 1-day move. Retail sentiment appears elevated.</div>
      </div>
    </div>
  </div>

  
  <div class="panel" aria-label="Reference prices">
    <div class="refs">
      <div>
        <div class="subhead">Analyst Price Target</div>
        <div class="readonly">
          <span class="pill">Target: <span id="targetTxt">75.0</span></span>
          <span class="note">Source: TopBroker</span>
        </div>
        <input id="target" type="hidden" value="75.0">
      </div>
      <div>
        <div class="subhead">Model Fair Value</div>
        <div class="readonly">
          <span class="pill">Fair Value: <span id="fvTxt">61.90</span></span>
          <span class="note">Source: internal model</span>
        </div>
        <input id="fv" type="hidden" value="61.90">
      </div>
    </div>
  </div>

  
  <div class="panel" aria-label="Order entry">
    <div class="ordergrid">
      
      <div class="rowline-3">
        <div>
          <label for="ordType">Order Type</label>
          <select id="ordType">
            <option>Market</option><option>Limit</option><option>Stop</option>
          </select>
        </div>
        <div>
          <label for="ordPx">Limit/Stop Price</label>
          <input id="ordPx" type="number" step="0.01" placeholder="e.g., 62.10">
        </div>
        <div>
          <label for="qty">Quantity</label>
          <input id="qty" type="number" step="1" min="1" value="200">
        </div>
      </div>

      
      <div>
        <label>Risk Controls</label>
        <div class="risk-box">
          <label><input type="checkbox" id="sl"> Stop Loss (approx. −10%)</label>
          <label><input type="checkbox" id="tp"> Take Profit (approx. +20%)</label>
        </div>
        <div class="note" style="margin-top:6px">These levels auto-close the position when reached. You may change them on the next screen.</div>
      </div>
    </div>

    
    <div class="acct-summary">
      <div>Balance: <b>$<span id="balanceTxt_bottom">100,000</span></b></div>
      <div>Position: <b><span id="posQty_bottom">0</span></b></div>
      <div>P/L: <b id="unrl_bottom">—</b></div>
    </div>

    <div class="footerline">
      <div>
        <button id="place" class="btn btn-primary">Review Order</button>
        <button id="confirm" class="btn btn-ghost" style="display:none">Confirm & Continue</button>
      </div>
      <div id="hint" class="hint"></div>
    </div>
  </div>
</div>

<script>
/* === UI helpers (no change to your logic) === */
(function(){
  // Toggle price input by order type (keep value for "intended limit" detection)
  var typeEl=document.getElementById('ordType');
  var pxEl=document.getElementById('ordPx');
  function togglePx(){
    var v=(typeEl.value||'').toLowerCase();
    var editable=(v==='limit'||v==='stop');
    pxEl.disabled=!editable;
    pxEl.placeholder=editable?'e.g., 62.10':'Not required for Market';
  }
  togglePx(); typeEl.addEventListener('change',togglePx);

  // Mirror top balance/pos/PL to bottom summary
  function sync(srcId,dstId){
    var s=document.getElementById(srcId), d=document.getElementById(dstId);
    if(!s||!d) return;
    d.textContent=s.textContent;
    new MutationObserver(()=>{ d.textContent=s.textContent; })
      .observe(s,{characterData:true,subtree:true,childList:true});
  }
  sync('balanceTxt','balanceTxt_bottom');
  sync('posQty','posQty_bottom');
  sync('unrl','unrl_bottom');

  // Keep chart badges synced
  (function(){
    var s=document.getElementById('last'), d=document.getElementById('lastPillTxt');
    if(!s||!d) return;
    d.textContent=s.textContent||'--';
    new MutationObserver(()=>{ d.textContent=s.textContent||'--'; })
      .observe(s,{characterData:true,subtree:true,childList:true});
  })();
  (function(){
    var s=document.getElementById('sym'), d=document.getElementById('symChart');
    if(!s||!d) return;
    d.textContent=s.textContent||'';
    new MutationObserver(()=>{ d.textContent=s.textContent||''; })
      .observe(s,{characterData:true,subtree:true,childList:true});
  })();
})();

/* === Candle + Y-axis + X-axis labels overlay (driven by #last) === */
(function(){
  var base=document.getElementById('px');
  var overlay=document.getElementById('pxOverlay');
  if(!base||!overlay) return;

  function sizeOverlay(){
    // match the inner plot area in .plotwrap (padding: 8px; bottom label space ~28px)
    var plotwrap=overlay.parentElement; // .plotwrap
    var r=plotwrap.getBoundingClientRect();
    overlay.width=Math.max(10,Math.floor(r.width-16));   // left+right padding (8px each)
    overlay.height=Math.max(10,Math.floor(r.height-36)); // top 8 + bottom 28
  }
  sizeOverlay(); window.addEventListener('resize', sizeOverlay);

  var ctx=overlay.getContext('2d');
  var candleMs=2000, maxCandles=60, series=[], cur=null, curStart=0;

  function pushPrice(p){
    var now=Date.now();
    if(!cur||now-curStart>=candleMs){
      if(cur){ series.push(cur); if(series.length>maxCandles) series.shift(); }
      curStart=now; cur={t:now,o:p,h:p,l:p,c:p};
    }else{
      if(p>cur.h) cur.h=p;
      if(p<cur.l) cur.l=p;
      cur.c=p;
    }
    draw();
  }

  // Observe #last for ticks
  (function(){
    var src=document.getElementById('last');
    if(!src) return;
    var init=parseFloat((src.textContent||'').replace(/[^0-9.\-]/g,''));
    if(!isNaN(init)) pushPrice(init);
    new MutationObserver(()=>{
      var v=parseFloat((src.textContent||'').replace(/[^0-9.\-]/g,''));
      if(!isNaN(v)) pushPrice(v);
    }).observe(src,{characterData:true,subtree:true,childList:true});
  })();

  setInterval(function(){ if(cur) draw(); }, 400);

  function draw(){
    var W=overlay.width,H=overlay.height;if(!W||!H)return;
    ctx.clearRect(0,0,W,H);

    var axisW=44,padR=6,x0=axisW,x1=W-padR,plotW=x1-x0;
    var y0=6,y1=H-6-12,plotH=y1-y0; // reserve ~12px for x-axis labels

    var data=series.slice(); if(cur)data.push(cur); if(!data.length)return;

    var lo=Infinity,hi=-Infinity;
    for(const k of data){ if(k.l<lo)lo=k.l; if(k.h>hi)hi=k.h; }
    if(!(isFinite(lo)&&isFinite(hi)))return;
    if(hi===lo){hi+=0.5;lo-=0.5;}
    var pad=(hi-lo)*0.08; lo-=pad; hi+=pad;
    const yFor=v=> y0+(hi-v)*(plotH/(hi-lo));

    var n=data.length,cw=Math.max(3,Math.floor(plotW/Math.max(30,n*1.2)));
    var gap=Math.max(1,Math.floor(cw*0.4));
    var totalW=n*(cw+gap)-gap,xStart=x1-totalW;

    ctx.lineWidth=1;
    for(let i=0;i<n;i++){
      const k=data[i],x=xStart+i*(cw+gap);
      const yo=yFor(k.o),yc=yFor(k.c),yh=yFor(k.h),yl=yFor(k.l);
      const up=k.c>=k.o;
      ctx.strokeStyle=up?'#059669':'#dc2626';
      ctx.fillStyle=up?'rgba(5,150,105,0.18)':'rgba(220,38,38,0.18)';
      // wick
      ctx.beginPath();ctx.moveTo(x+Math.floor(cw/2),yh);ctx.lineTo(x+Math.floor(cw/2),yl);ctx.stroke();
      // body
      const top=Math.min(yo,yc),h=Math.max(2,Math.abs(yc-yo));
      ctx.fillRect(x,top,cw,h);ctx.strokeRect(x,top,cw,h);
    }

    // Y-axis grid + labels
    ctx.fillStyle='#6b7280';ctx.strokeStyle='#e5e7eb';
    ctx.font='11px Inter,system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif';
    ctx.textAlign='right';ctx.textBaseline='middle';
    const ticksY=5;
    for(let i=0;i<ticksY;i++){
      const frac=i/(ticksY-1),v=hi-frac*(hi-lo),y=y0+frac*plotH;
      ctx.beginPath();ctx.moveTo(x0, y+0.5);ctx.lineTo(x1, y+0.5);ctx.stroke();
      ctx.fillText(v.toFixed(2), axisW-6, y);
    }

    // X-axis labels (scenario sense of time)
    const labels=['9:28','9:29','9:30','9:31','9:32'];
    ctx.textAlign='center'; ctx.textBaseline='top';
    for(let i=0;i<labels.length;i++){
      const frac=i/(labels.length-1);
      const x=x0 + frac*plotW;
      ctx.fillText(labels[i], x, y1+4);
    }
  }
})();
</script>
